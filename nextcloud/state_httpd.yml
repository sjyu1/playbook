---
- name: State Httpd
  hosts: localhost
  gather_facts: no
  tasks:
##### Deploy VirtualMachine #####
    - name: 배포한 가상머신 정보 수집
      cs_instance_info:
        api_url: "{{ lookup('env', 'MOLD_API_URL') }}"
        api_key: "{{ lookup('env', 'MOLD_API_KEY') }}"
        api_secret: "{{ lookup('env', 'MOLD_SECRET_KEY') }}"
        name: nextcloud-deploy-vm3
      delegate_to: localhost
      register: vm

    - name: 배포 가상머신 ip 정보 수집
      debug:
        msg: "{{ vm.instances[0].nic[0].ipaddress }}"

##### Save State Httpd #####
    - name: 그룹 조회
      ansible.builtin.command: python2 /home/runner/mold_genie_api.py \
        -c listAutomationDeployedResource \
        -ap http -ip "{{ lookup('env', 'MOLD_DEFAULT_URL') }}" -p "{{ lookup('env', 'MOLD_DEFAULT_PORT') }}" \
        -ak "{{ lookup('env', 'MOLD_API_KEY') }}" \
        -sk "{{ lookup('env', 'MOLD_SECRET_KEY') }}" \
        -n Nextcloud1
      register: list
      
    - name: debug list stdout
      set_fact:
        list_jsondata: "{{ list.stdout | from_json }}"
    - debug:
        var: list_jsondata
    - name: group list count
      debug:
        msg: "{{ list_jsondata }}"

    # 그룹등록
    - name: register resource
      ansible.builtin.command: python2 /home/runner/mold_genie_api.py \
        -c addDeployedResourceGroup \
        -ap http -ip "{{ lookup('env', 'MOLD_DEFAULT_URL') }}" -p "{{ lookup('env', 'MOLD_DEFAULT_PORT') }}" \
        -ak "{{ lookup('env', 'MOLD_API_KEY') }}" \
        -sk "{{ lookup('env', 'MOLD_SECRET_KEY') }}" \
        -zid "{{ lookup('env', 'MOLD_ZONE_ID') }}" \
        -n Nextcloud1 \
        -d 'Nextcloud description'
      when: list_jsondata.listautomationdeployedresourceresponse == {}
      register: resourceGroup

    - name: debug resourceGroup stdout
      set_fact:
        group_jsondata: "{{ resourceGroup.stdout | from_json }}"
    - debug:
        var: group_jsondata
    - name: group resourceGroup count
      debug:
        msg: "{{ group_jsondata }}"

    - name: resourceGroup result
      debug:
        msg: "{{ group_jsondata.adddeployedresourcegroupresponse.automationdeployedresource.id }}"

    - name: ssh
      ansible.builtin.command: ssh root@{{ vm.instances[0].nic[0].ipaddress }} "systemctl is-active httpd"
      register: state_result
      # delegate_to: genie_vm
    - name: ssh result
      debug:
        msg: "{{ state_result.stdout }}"

    # 서비스 단위별 상태 삭제


    # 서비스 단위별 상태 등록
    - name: register unit resource
      ansible.builtin.command: python2 /home/runner/mold_genie_api.py \
        -c addDeployedUnitResource \
        -ap http -ip "{{ lookup('env', 'MOLD_DEFAULT_URL') }}" -p "{{ lookup('env', 'MOLD_DEFAULT_PORT') }}" \
        -ak "{{ lookup('env', 'MOLD_API_KEY') }}" \
        -sk "{{ lookup('env', 'MOLD_SECRET_KEY') }}" \
        -gid "{{ group_jsondata.adddeployedresourcegroupresponse.automationdeployedresource.id }}" \
        -vid "{{ vm.instances[0].id }}" \
        -un httpd \
        -s {{ state_result.stdout }}




    # 서비스 단위별 상태 등록
    # - name: register resource
    #   ansible.builtin.command: python2 /home/runner/mold_genie_api.py \
    #     -c addDeployedUnitResource \
    #     -ip 10.10.254.168 \
    #     -ak ArfB-Y2r8LXfeWBmyNzpCgk1aOzg2s_O8PYXLX6uNRKg7lOWyd16nTshg4fsmEWs0dnEk8PIb0do0eczlysFpg \
    #     -sk g8Cghfff4Fc-n_iEYoHDJxnIv6sB0wJFx1CwtgEvBwJZw-W41Dblg7FA-oWN_EfO_C__f90STJDOPwlx3ftkUg \
    #     -gid {{ list_jsondata.listautomationdeployedresourceresponse.automationdeployedresource[0].id }} \
    #     -vid 98fb8532-c4fe-432c-a301-d5d60936ad22 \
    #     -un httpd2 \
    #     -s {{ services[service]['status'] }}