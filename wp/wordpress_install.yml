---
- name: Genie를 활용한 Mold VM 배포
  hosts: ccvm
  gather_facts: no
  tasks:

##### Deploy VirtualMachine #####

    - name: 가상머신 생성
      cs_instance:
        name: sj-deploy-vm1
        template: CentOS8.4_changeRepo
        service_offering: 2C-4GB-RBD
        networks:
          - sj-genie-network1
      delegate_to: localhost

    - name: 배포한 가상머신 정보 수집
      cs_instance_info:
        name: sj-deploy-vm1
      delegate_to: localhost
      register: vm

    - name: 배포 가상머신 ip 정보 수집
      debug:
        msg: "{{ vm.instances[0].nic[0].ipaddress }}"

    - name: Create a static NAT for IP 10.10.3.113 to sj-deploy-vm1
      cs_staticnat:
        ip_address: 10.10.3.113
        vm: sj-deploy-vm1
      delegate_to: localhost

    - name: 배포 가상머신 인메모리 inventory에 등록
      add_host:
        hostname: "{{ vm.instances[0].nic[0].ipaddress }}"
        groups:
          - deployVmIp

    - name: 10.10.3.113:80 포트 허용
      cs_firewall:
        ip_address: 10.10.3.113
        start_port: 80
        end_port: 80
        protocol: tcp
      delegate_to: localhost

    - name: 10.10.3.113:22 포트 허용
      cs_firewall:
        ip_address: 10.10.3.113
        start_port: 22
        end_port: 22
        protocol: tcp
      delegate_to: localhost


##### Install wordpress #####

- name: deploy 가상머신에 wordpress 설치
  hosts: deployVmIp
  gather_facts: no
  vars:
    - ansible_user: root
    - ansible_ssh_pass: Ablecloud1!

    #PHP Settings
    - php_modules:
      - php
      - php-curl
      - php-gd
      - php-mbstring
      - php-xml
      - php-xmlrpc
      - php-soap
      - php-intl
      - php-zip

    #MySQL Settings
    - mysql_root_password: Ablecloud1!
    - mysql_db: wpdb
    - mysql_user: wpuser
    - mysql_password: Ablecloud1!

    #HTTP Settings
    - http_host: html
    - http_conf: wordpress
    - http_port: 80

  tasks:

    - name: 생성한 가상머신이 부팅이 완료될 때까지 기다림
      wait_for_connection:
        timeout: 900

    - name: Install HTTP Packages
      yum: name=httpd update_cache=yes state=latest

    - name: Start httpd service
      systemd: name=httpd state=started enabled=yes

    - name: Create Apache Document Root
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        owner: "apache"
        group: "apache"
        mode: '0755'

    # ansible control에 httpd설치 필요
    - name: Set up Apache VirtualHost
      template:
        src: "/root/httpd.conf"
        dest: "/etc/httpd/conf.d/{{ http_conf }}"
        owner: root
        group: root
        mode: u=rw,g=r,o=r

    - rpm_key:
        state: present
        key: https://rpms.remirepo.net/RPM-GPG-KEY-remi2018

    - name: Install PHP Remi Repository
      yum:
        name: "http://rpms.remirepo.net/enterprise/remi-release-8.rpm"
        state: present

    - name: Enable PHP Remi Repository
      command: dnf module reset php -y
      command: dnf module enable php:remi-7.4 -y


    - name: Install PHP Extensions
      yum: name={{ item }} update_cache=yes state=latest
      loop: "{{ php_modules }}"

    # MySQL Configuration
    #sudo yum install -y https://dev.mysql.com/get/mysql80-community-release-el8-1.noarch.rpm

    - name: Install MySQL Packages
      yum: name={{ item }} update_cache=yes state=latest
      loop: [ 'mysql-server', 'php-mysqlnd', 'python3-PyMySQL' ]

    - name: Start mysqld service
      systemd: name=mysqld state=started enabled=yes

    - name: Set MySQL root Password
      mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        login_host: localhost
        login_user: root
        login_password: ""
        state: present

    - name: Creates database for WordPress
      mysql_db:
        name: "{{ mysql_db }}"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Create MySQL user for WordPress
      mysql_user:
        name: "{{ mysql_user }}"
        password: "{{ mysql_password }}"
        priv: "{{ mysql_db }}.*:ALL"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_password: "{{ mysql_root_password }}"

    # WordPress Configuration
    - name: Download and unpack latest WordPress
      unarchive:
        src: https://wordpress.org/latest.tar.gz
        dest: "/var/www/{{ http_host }}"
        remote_src: yes
        creates: "/var/www/{{ http_host }}/wordpress"

    - name: Set ownership
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        recurse: yes
        owner: apache
        group: apache

    - name: Set permissions for directories
      shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \\;"

    - name: Set permissions for files
      shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \\;"

    - name: Copy sample config file
      command: mv /var/www/{{ http_host }}/wordpress/wp-config-sample.php /var/www/{{ http_host }}/wordpress/wp-config.php creates=/var/www/{{ http_host }}/wordpress/wp-config.php
      become: yes

    - name: Update WordPress config file
      lineinfile:
        path: "/var/www/{{ http_host }}/wordpress/wp-config.php"
        regexp: "{{item.regexp}}"
        line: "{{item.line}}"
      with_items:
        - {'regexp': "define\\( 'DB_NAME', '(.)+' \\);", 'line': "define( 'DB_NAME', '{{mysql_db}}' );"}
        - {'regexp': "define\\( 'DB_USER', '(.)+' \\);", 'line': "define( 'DB_USER', '{{mysql_user}}' );"}
        - {'regexp': "define\\( 'DB_PASSWORD', '(.)+' \\);", 'line': "define( 'DB_PASSWORD', '{{mysql_password}}' );"}

    - name: Restart httpd service
      systemd: name=httpd state=restarted
      become: yes

    # Firewall Configuration
    - name: Disable SELinux Permanently (Reboot Required)
      selinux: state=disabled

    - name: Disable SELinux Without Reboot
      command: /sbin/setenforce 0

    - name: Configure Firewall
      firewalld: zone=public service=http permanent=yes state=enabled

    - name: Reload Firewall
      systemd: name=firewalld state=reloaded
