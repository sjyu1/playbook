---
- name: Genie를 활용한 Mold VM 배포
  hosts: localhost
  vars:
    web_instance_nm: 'tier-web-deploy-vm'
    was_instance_nm: 'tier-was-deploy-vm'
    db_instance_nm: 'tier-db-deploy-vm'
    instance_temp: 'CentOS-8-5-2111-cloudinit'
    instance_computeoffer: '2C-4GB-RBD'
  gather_facts: no
  tasks:
##### Deploy VirtualMachine #####

    - name: 가상머신 생성 "{{ web_instance_nm }}"
      cs_instance:
        api_url: "{{ lookup('env', 'MOLD_API_URL') }}"
        api_key: "{{ lookup('env', 'MOLD_API_KEY') }}"
        api_secret: "{{ lookup('env', 'MOLD_SECRET_KEY') }}"
        zone: "{{ lookup('env', 'MOLD_ZONE_NAME') }}"
        name: "{{ web_instance_nm }}"
        template: "{{ instance_temp }}"
        service_offering: "{{ instance_computeoffer }}"
        ssh_key: "{{ lookup('env', 'MOLD_SSH_KEYPAIR') }}"
        user_data: |
            #cloud-config
            disable_root: false
            ssh_pwauth: true
        networks: "{{ lookup('env', 'AC_NETWORK_NAME') }}"
      register: vm

    - name: 가상머신 생성 후 ssh_key 생성을 위한 대기
      wait_for:
        timeout: 15

    - name: 배포 가상머신 ip 정보 수집
      debug:
        msg: "{{ vm.default_ip }}"

    - name: 배포 가상머신 인메모리 inventory에 등록
      add_host:
        hostname: "{{ vm.default_ip }}"
        groups:
          - web-deployVmIp

    - name: Allow 80 port for public ip
      cs_firewall:
        api_url: "{{ lookup('env', 'MOLD_API_URL') }}"
        api_key: "{{ lookup('env', 'MOLD_API_KEY') }}"
        api_secret: "{{ lookup('env', 'MOLD_SECRET_KEY') }}"
        ip_address: "{{ ac_public_ip.ip_address }}"
        zone: "{{ lookup('env', 'MOLD_ZONE_NAME') }}"
        start_port: 80
        end_port: 80
        protocol: tcp
      delegate_to: localhost

    - name: Allow 443 port for public ip
      cs_firewall:
        api_url: "{{ lookup('env', 'MOLD_API_URL') }}"
        api_key: "{{ lookup('env', 'MOLD_API_KEY') }}"
        api_secret: "{{ lookup('env', 'MOLD_SECRET_KEY') }}"
        ip_address: "{{ web-deployVmIp }}"
        zone: "{{ lookup('env', 'MOLD_ZONE_NAME') }}"
        start_port: 443
        end_port: 443
        protocol: tcp
      delegate_to: localhost

##### Deploy WebServer #####
- name: "Deploy WebServer"
  hosts: web-deployVmIp
  gather_facts: no
  tasks:
  # Install nginx
  - name: "Install nginx"
    ansible.builtin.package:
      name: "nginx"
      state: "present"

  # Config nginx###########################
  
  - name: Set httpd_can_network_connect flag on and keep it persistent across reboots
    ansible.posix.seboolean:
      name: httpd_can_network_connect
      state: yes
      persistent: yes

  # Start nginx
  - name: Start nginx
    ansible.builtin.service:
      name: "nginx.service"
      state: "restarted"