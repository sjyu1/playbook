---
- name: Genie를 활용한 Mold VM 삭제
  hosts: localhost
  vars:
    db_instance_nm: "tier-db-deploy-vm"
    was_instance_nm: "tier-was-deploy-vm"
    web_instance_nm: "tier-web-deploy-vm"
    service_group: "3Tier"
  gather_facts: no
  tasks:

  ### Delete resource package  ###
  - name: 서비스 그룹 상태정보 삭제 및 단위별 상태정보 삭제
    ansible.builtin.command: python2 /home/runner/mold_genie_api.py \
      -c deleteDeployedResourceGroup \
      -ap http -ip "{{ lookup('env', 'MOLD_DEFAULT_URL') }}" -p "{{ lookup('env', 'MOLD_DEFAULT_PORT') }}" \
      -ak "{{ lookup('env', 'MOLD_API_KEY') }}" \
      -sk "{{ lookup('env', 'MOLD_SECRET_KEY') }}" \
      -zid "{{ lookup('env', 'MOLD_ZONE_ID') }}" \
      -n "{{ service_group }}"

  - name: 배포한 가상머신 정보 수집
    cs_instance_info:
      api_url: "{{ lookup('env', 'MOLD_API_URL') }}"
      api_key: "{{ lookup('env', 'MOLD_API_KEY') }}"
      api_secret: "{{ lookup('env', 'MOLD_SECRET_KEY') }}"
      name: "{{ web_instance_nm }}"
    delegate_to: localhost
    register: web_vm
    ignore_errors: yes

  # - name: 배포 가상머신 ip 정보 수집
  #   debug:
  #     msg: "{{ web_vm }}"

  - name: Remove a static NAT
    cs_staticnat:
      api_url: "{{ lookup('env', 'MOLD_API_URL') }}"
      api_key: "{{ lookup('env', 'MOLD_API_KEY') }}"
      api_secret: "{{ lookup('env', 'MOLD_SECRET_KEY') }}"
      zone: "{{ lookup('env', 'MOLD_ZONE_ID') }}"
      ip_address: "{{ web_vm.instances[0].public_ip }}"
      state: absent
    delegate_to: localhost
    ignore_errors: yes

  - name: Disassociate an IP address
    cs_ip_address:
      api_url: "{{ lookup('env', 'MOLD_API_URL') }}"
      api_key: "{{ lookup('env', 'MOLD_API_KEY') }}"
      api_secret: "{{ lookup('env', 'MOLD_SECRET_KEY') }}"
      zone: "{{ lookup('env', 'MOLD_ZONE_ID') }}"
      ip_address: "{{ web_vm.instances[0].public_ip }}"
      state: absent
    delegate_to: localhost
    ignore_errors: yes

  - name: Destroyed VirtualMachine
    cs_instance:
      api_url: "{{ lookup('env', 'MOLD_API_URL') }}"
      api_key: "{{ lookup('env', 'MOLD_API_KEY') }}"
      api_secret: "{{ lookup('env', 'MOLD_SECRET_KEY') }}"
      zone: "{{ lookup('env', 'MOLD_ZONE_ID') }}"
      name: "{{ item }}"
      state: destroyed
    with_items:
      - "{{ db_instance_nm }}"
      - "{{ was_instance_nm }}"
      - "{{ web_instance_nm }}"
    delegate_to: localhost
    ignore_errors: yes

- name: 서비스 상태체크 스케줄러 삭제
  hosts: genie_vm
  vars:
    base_path: "genie"
    genie_ip: "localhost"
  gather_facts: no
  ignore_errors: yes
  tasks:

  - name: AWX 초기 관리자 패스워드 추출
    shell: kubectl get -n awx secret awx-admin-password -o jsonpath="{.data.password}" | base64 --decode
    register: admin_password

  - name: Genie job 스케줄러 삭제
    awx.awx.schedule:
      name: tier_check
      state: absent
      unified_job_template: "tier_check"
      # rrule: "DTSTART;TZID=Asia/Seoul:20220101T120000 RRULE:FREQ=MINUTELY;INTERVAL=1"
      controller_host: "http://{{ genie_ip }}:80"
      controller_username: admin
      controller_password: "{{ admin_password.stdout }}"